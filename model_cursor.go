/*
Ledger API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ledgerclient

import (
	"encoding/json"
)

// Cursor struct for Cursor
type Cursor struct {
	HasMore bool `json:"has_more"`
	Next *string `json:"next,omitempty"`
	PageSize int32 `json:"page_size"`
	Previous *string `json:"previous,omitempty"`
	RemainingResults int32 `json:"remaining_results"`
	Total int32 `json:"total"`
}

// NewCursor instantiates a new Cursor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCursor(hasMore bool, pageSize int32, remainingResults int32, total int32) *Cursor {
	this := Cursor{}
	this.HasMore = hasMore
	this.PageSize = pageSize
	this.RemainingResults = remainingResults
	this.Total = total
	return &this
}

// NewCursorWithDefaults instantiates a new Cursor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCursorWithDefaults() *Cursor {
	this := Cursor{}
	return &this
}

// GetHasMore returns the HasMore field value
func (o *Cursor) GetHasMore() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value
// and a boolean to check if the value has been set.
func (o *Cursor) GetHasMoreOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.HasMore, true
}

// SetHasMore sets field value
func (o *Cursor) SetHasMore(v bool) {
	o.HasMore = v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *Cursor) GetNext() string {
	if o == nil || o.Next == nil {
		var ret string
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cursor) GetNextOk() (*string, bool) {
	if o == nil || o.Next == nil {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *Cursor) HasNext() bool {
	if o != nil && o.Next != nil {
		return true
	}

	return false
}

// SetNext gets a reference to the given string and assigns it to the Next field.
func (o *Cursor) SetNext(v string) {
	o.Next = &v
}

// GetPageSize returns the PageSize field value
func (o *Cursor) GetPageSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value
// and a boolean to check if the value has been set.
func (o *Cursor) GetPageSizeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PageSize, true
}

// SetPageSize sets field value
func (o *Cursor) SetPageSize(v int32) {
	o.PageSize = v
}

// GetPrevious returns the Previous field value if set, zero value otherwise.
func (o *Cursor) GetPrevious() string {
	if o == nil || o.Previous == nil {
		var ret string
		return ret
	}
	return *o.Previous
}

// GetPreviousOk returns a tuple with the Previous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cursor) GetPreviousOk() (*string, bool) {
	if o == nil || o.Previous == nil {
		return nil, false
	}
	return o.Previous, true
}

// HasPrevious returns a boolean if a field has been set.
func (o *Cursor) HasPrevious() bool {
	if o != nil && o.Previous != nil {
		return true
	}

	return false
}

// SetPrevious gets a reference to the given string and assigns it to the Previous field.
func (o *Cursor) SetPrevious(v string) {
	o.Previous = &v
}

// GetRemainingResults returns the RemainingResults field value
func (o *Cursor) GetRemainingResults() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RemainingResults
}

// GetRemainingResultsOk returns a tuple with the RemainingResults field value
// and a boolean to check if the value has been set.
func (o *Cursor) GetRemainingResultsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RemainingResults, true
}

// SetRemainingResults sets field value
func (o *Cursor) SetRemainingResults(v int32) {
	o.RemainingResults = v
}

// GetTotal returns the Total field value
func (o *Cursor) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *Cursor) GetTotalOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *Cursor) SetTotal(v int32) {
	o.Total = v
}

func (o Cursor) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["has_more"] = o.HasMore
	}
	if o.Next != nil {
		toSerialize["next"] = o.Next
	}
	if true {
		toSerialize["page_size"] = o.PageSize
	}
	if o.Previous != nil {
		toSerialize["previous"] = o.Previous
	}
	if true {
		toSerialize["remaining_results"] = o.RemainingResults
	}
	if true {
		toSerialize["total"] = o.Total
	}
	return json.Marshal(toSerialize)
}

type NullableCursor struct {
	value *Cursor
	isSet bool
}

func (v NullableCursor) Get() *Cursor {
	return v.value
}

func (v *NullableCursor) Set(val *Cursor) {
	v.value = val
	v.isSet = true
}

func (v NullableCursor) IsSet() bool {
	return v.isSet
}

func (v *NullableCursor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCursor(val *Cursor) *NullableCursor {
	return &NullableCursor{value: val, isSet: true}
}

func (v NullableCursor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCursor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


